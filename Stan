library("nortest")
library("splines")                  
library("graphics")
library("stats")
library("survival")
library("graphics")
library("MASS")
library("tseries")
library("car")
library("forecast")
library("xts")

rm(list=ls())
#setwd("/Volumes/AGUA/Tesis_fer")
#setwd("G:/Tesis_fer")
setwd("E:/Tesis_fer")
###Leer serie
Stan<-read.table("Stan25.txt",header=FALSE,dec=".",sep=" ")
S <- numeric(60)
for(i in 1:60){S[i]=Stan[i,1]}
start.date <- as.POSIXct("2005-10-1 16:25:00")
end.date <- as.POSIXct("2005-10-5 22:25:00")
time.index <- seq(start.date, by="2 hours", end.date)
Fecha <- time.index
Serie1<- xts(S[9:60], Fecha)
plot(Serie1)
S<-ts(Serie1)

adf<-adf.test(S,alternative="explosive")
adf$p.value
#No hay suficiente evidencia estad?stica al 95% de confianza
#para rechazar que Stan sea estacionario
a=length(S)/4
b=a+1
c=a+2
d=length(S)-1
covarianzas<-acf(S,lag=b,type="covariance")
covar=numeric((2*length(covarianzas$acf))-1)
covar[b]=covarianzas$acf[1]
for(i in 1:a)
{covar[i]=covarianzas$acf[c-i]
covar[i+b]=covarianzas$acf[i+1]}#covar=gamma_n(*)

L=1
C=matrix(numeric((L+1)^2),ncol=L+1,nrow=L+1)
for(i in 1:(L+1)){
  for(j in 1:(L+1)){
    for(m in 1:a-(L+1))
    {C[i,j]=((covar[m+b]*covar[m-i+j+b])+
               (covar[m+j+b]*covar[m-i+b])) + C[i,j] }}}
C
gamma=matrix(numeric(d*b),ncol=b,nrow=d)

for(k in L:d)
{ for(i in 1:b){
  covark<-acf(S[1:(k+1)],lag=b,type="covariance")
  gamma[k,i]<-covark$acf[i]}}
 # View(gamma)

diferencias=matrix(numeric((L+1)*d),ncol=(L+1),nrow=d)
  
for(k in L:d)  
{ for(i in 1:(L+1))
{diferencias[k,i]=gamma[k,i]-covar[a+i]}}
#View(diferencias)   

G=numeric(d)

for(k in L:d)
{ g=(C^-1) %*% diferencias[k,]
  g=t(diferencias[k,]) %*% g
   G[k]=((k^2)*g)/60}
G
T=max(G)
T#punto de corte k*=20 3/Oct/6 a.m.
for(i in 1:length(G)){
  if(G[i]==T){corte=i}}

par(mfrow=c(2,1))
plot(seq(1,d),G,type="l")
abline(h=2.408,col="red")
plot(Serie1)
abline(v=Fecha[corte],col="blue")

#Veamos a Stan del 1/Oct/16hrs al 3/Oct/6hrs 
rm(list=ls())
#setwd("/Volumes/AGUA/Tesis_fer")
#setwd("G:/Tesis_fer")
setwd("E:/Tesis_fer")
###Leer serie
Stan<-read.table("Stan25.txt",header=FALSE,dec=".",sep=" ")
S <- numeric(60)
for(i in 1:60){S[i]=Stan[i,1]}
start.date <- as.POSIXct("2005-10-1 16:25:00")
end.date <- as.POSIXct("2005-10-3 06:25:00")
time.index <- seq(start.date, by="2 hours", end.date)
Fecha <- time.index
f<-length(Fecha)
Serie1<- xts(S[9:(9+f-1)], Fecha)
plot(Serie1)
S<-ts(Serie1)

adf<-adf.test(S,alternative="explosive")
adf$p.value
#No hay suficiente evidencia estad?stica al 95% de confianza
#para rechazar que Stan sea estacionario
a=length(S)%/%4
b=a+1
c=a+2
d=length(S)-1
covarianzas<-acf(S,lag=b,type="covariance")
covar=numeric((2*length(covarianzas$acf))-1)
covar[b]=covarianzas$acf[1]
for(i in 1:a)
{covar[i]=covarianzas$acf[c-i]
 covar[i+b]=covarianzas$acf[i+1]}#covar=gamma_n(*)

L=1
C=matrix(numeric((L+1)^2),ncol=L+1,nrow=L+1)
for(i in 1:(L+1)){
  for(j in 1:(L+1)){
    for(m in 1:a-(L+1))
    {C[i,j]=((covar[m+b]*covar[m-i+j+b])+
               (covar[m+j+b]*covar[m-i+b])) + C[i,j] }}}
C
gamma=matrix(numeric(d*b),ncol=b,nrow=d)

for(k in L:d)
{ for(i in 1:b){
  covark<-acf(S[1:(k+1)],lag=b,type="covariance")
  gamma[k,i]<-covark$acf[i]}}
# View(gamma)

diferencias=matrix(numeric((L+1)*d),ncol=(L+1),nrow=d)

for(k in L:d)  
{ for(i in 1:(L+1))
{diferencias[k,i]=gamma[k,i]-covar[a+i]}}
#View(diferencias)   

G=numeric(d)

for(k in L:d)
{ g=(C^-1) %*% diferencias[k,]
  g=t(diferencias[k,]) %*% g
  G[k]=((k^2)*g)/60}
G
T=max(G)
T#ya no hay cambios, ahora ajustemos un modelo
plot(S)
c<-boxplot(S)
summary(c)
acf(S,lag=20)
pacf(S,lag=20)

regresion <- lm(time(S)~S)
boxcox(regresion,lambda=seq(0,1.5,1/10))
Datos<-bcPower(S,lambda=0.7)

modelo1 <- arima(Datos,order=c(1,0,1))
modelo2 <- arima(Datos,order=c(2,0,2))
modelo3 <- arima(Datos,order=c(3,0,3))

modelo1$aic
modelo2$aic
modelo3$aic

acf(modelo2$residuals)
pacf(modelo2$residuals)
confint(modelo2)
coeficientes <- numeric(5)
for(i in 1:5){
  coeficientes[i] <- abs(modelo2$coef[i]/sqrt(modelo2$var.coef[i,i]))
}
coeficientes

modelo4 <- arima(Datos,order=c(2,0,2),transform.pars=FALSE,
                 fixed=c(NA,NA,0,NA,NA))
acf(modelo4$residuals)
pacf(modelo4$residuals)
confint(modelo4)
modelo4
.4316/.1566;.7452/.131;1/.2609;10.4167/.0507#Todos significativos

Box.test(modelo4$residuals)
shapiro.test(modelo4$residuals)
mean(modelo4$residuals)
#Los residuales son independientes y se distribuyen de manera normal
#al 95% de confianza, ademÃ¡s podemos considerar que se distribuyen como 
#un ruido blanco normal
modelo4
#Modelo final: ARMA(2,2)
